<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_1791009_event_ma.FeedbackUtils</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>FeedbackUtils</name>
        <script><![CDATA[var FeedbackUtils = Class.create();
FeedbackUtils.prototype = {
  initialize: function() {},

  execute: function(action, input) {
    var result = [];

    var table = 'x_1791009_event_ma_feedback';
    var gr = new GlideRecord(table);

    // ACTION: Fetch all feedback
    if (action === 'fetchAllFeedback') {
      gr.query();
      while (gr.next()) {
        result.push({
          number: gr.getValue('number'),
          attendee: gr.getDisplayValue('attendee_id'),
          rating: gr.getValue('rating'),
          comments: gr.getValue('comments')
        });
      }
      return JSON.stringify(result);
    }

    // ACTION: Get feedback by number
    else if (action === 'getFeedback' && input) {
      gr.addQuery('number', input);
      gr.query();
      if (gr.next()) {
        result.push({
          id: gr.getDisplayValue(),
          rating: gr.getValue('rating')
        });
      }
      return JSON.stringify(result);
    }

    // ACTION: Check feedback positivity by number
    else if (action === 'checkFeedback' && input) {
      gr.addQuery('number', input);
      gr.query();
      if (gr.next()) {
        var rating = gr.getValue('rating');
        if (rating === 'excellent' || rating === 'good') {
          return 'positive';
        }
      }
      return 'negative';
    }

    // ACTION: Get feedback by event number
    else if (action === 'getEventFeedback' && input) {
      gr.addQuery('event_id.number', input);
      gr.query();
      while (gr.next()) {
        result.push({
          id: gr.getDisplayValue(),
          rating: gr.getValue('rating')
        });
      }
      return JSON.stringify(result);
    }

    // Default fallback
    return JSON.stringify({ error: 'Invalid action or missing input.' });
  },

  type: 'FeedbackUtils'
};
]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2025-08-04 19:34:46</sys_created_on>
        <sys_id>3c2de317c34f2210f23870edd4013186</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>FeedbackUtils</sys_name>
        <sys_package display_value="Event Management &amp;amp; Planning System" source="x_1791009_event_ma">5cf815dbc3432210f23870edd4013162</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Event Management &amp;amp; Planning System">5cf815dbc3432210f23870edd4013162</sys_scope>
        <sys_update_name>sys_script_include_3c2de317c34f2210f23870edd4013186</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2025-08-05 16:38:35</sys_updated_on>
    </sys_script_include>
</record_update>
